{"version":3,"sources":["views/publicPresale/components/Hero.tsx","views/publicPresale/components/LabelButton.tsx","views/publicPresale/components/ContributeModal.tsx","views/publicPresale/components/PresaleContribute.tsx","views/publicPresale/components/Divider.tsx","views/publicPresale/publicPresale.tsx"],"names":["StyledHero","styled","Heading","attrs","as","size","Text","theme","colors","secondary","div","gradients","bubblegum","StyledContainer","Container","mediaQueries","sm","lg","Hero","useI18n","ButtonWrapper","radii","default","borderColor","LabelButton","value","label","buttonLabel","onClick","disabled","fontSize","color","bold","ContributeModal","currency","contract","currencyAddress","onDismiss","useState","setValue","pendingTx","setPendingTx","account","useWallet","balance","getFullDisplayBalance","useTokenBalance","console","log","title","BalanceInput","onChange","e","currentTarget","symbol","max","onSelectMax","toString","justifyContent","mb","fullWidth","variant","mr","a","methods","buy","BigNumber","times","pow","send","from","href","style","margin","StyledPreSaleCard","Card","Row","RowItem","PresaleContribute","address","status","raisingAmount","tokenDecimals","setClaimTokenBalance","setClaimed","amount","setAmount","isActive","setActive","total","setTotal","unclaimToken","setUnclaimToken","ownToken","setOwnToken","totalSoldToken","setTotalSoldToken","leftToken","setLeftToken","contractRaisingToken","useERC20","allowance","usePreSaleAllowance","onApprove","usePreSaleApprove","useModal","onPresentContributeModal","useEffect","fetchV","claimActive","call","_claimed","saleActive","_active","getPaladinsTokensLeft","_total","getTotalTokensSold","_totalSoldToken","_leftToken","minus","getTokensUnclaimed","getTokensOwned","_amount","_unclaimToken","_ownToken","fetch","claim","claimTokens","isFinished","textAlign","error","UnlockButton","getBalanceNumber","toFixed","Spacer","CardValue","decimals","prefix","textSubtle","Presale","presaleContract","usePreSaleContract","Page","Divider"],"mappings":"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","file":"static/js/20.a88a5c64.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Container from 'components/layout/Container'\r\n\r\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\r\n  color: 'white';\r\n  margin-bottom: 24px;\r\n  font-size: 32px;\r\n`\r\n\r\nconst Blurb = styled(Text)`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`\r\n\r\nconst StyledHero = styled.div`\r\n  // background-image: linear-gradient(180deg, #53dee9 0%, #1fc7d4 100%);\r\n  // background-image: ${({ theme }) => theme.colors.gradients.bubblegum};\r\n  padding-bottom: 40px;\r\n  padding-top: 40px;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst StyledContainer = styled(Container)`\r\n  flex: 1;\r\n  // padding-right: 0;\r\n  text-align: center;\r\n  background-image: url(/images/egg/2d.png);\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  padding-bottom: 40px;\r\n  padding-top: 150px;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-right: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-right: 32px;\r\n  }\r\n`\r\n\r\nconst Hero = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledHero>\r\n      <StyledContainer>\r\n        {/* <Title>{TranslateString(20000, 'PreSale')}</Title> */}\r\n        {/* <Blurb>{TranslateString(999, `Share the referral link below to invite your friends and earn 3% of your friends' earnings FOREVER!`)}</Blurb> */}\r\n      </StyledContainer>\r\n    </StyledHero>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import React, { ButtonHTMLAttributes } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n  value: string\r\n  label?: string\r\n  buttonLabel: string\r\n  disabled?: boolean\r\n}\r\n\r\nconst ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border: solid 1px;\r\n  border-radius: ${({ theme }) => theme.radii.default};\r\n  border-color: ${({ theme }) => theme.colors.borderColor};\r\n  padding-left: 16px;\r\n`\r\n\r\nconst LabelButton: React.FC<Props> = ({ value, label, buttonLabel, onClick, disabled = false }) => {\r\n  return (\r\n    <div>\r\n      {label && (\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {label}\r\n        </Text>\r\n      )}\r\n      <ButtonWrapper>\r\n        <Text bold fontSize=\"20px\">\r\n          {value}\r\n        </Text>\r\n        <Button onClick={onClick} disabled={disabled}>\r\n          {buttonLabel}\r\n        </Button>\r\n      </ButtonWrapper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LabelButton\r\n","import React, { useState } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Modal, Button, Flex, LinkExternal } from '@pancakeswap-libs/uikit'\r\nimport BalanceInput from 'components/Input/BalanceInput'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface Props {\r\n  currency: string\r\n  contract: any\r\n  currencyAddress: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst ContributeModal: React.FC<Props> = ({ currency, contract, currencyAddress, onDismiss }) => {\r\n  const [value, setValue] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { account } = useWallet()\r\n  const balance = getFullDisplayBalance(useTokenBalance(currencyAddress), 18)\r\n  console.log('debug->value',value)\r\n  return (\r\n    <Modal title={`Contribute ${currency}`} onDismiss={onDismiss}>\r\n      <BalanceInput\r\n        value={value}\r\n        onChange={(e) => setValue(e.currentTarget.value)}\r\n        symbol={currency}\r\n        max={balance}\r\n        onSelectMax={() => setValue(balance.toString())}\r\n      />\r\n      <Flex justifyContent=\"space-between\" mb=\"24px\">\r\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss} mr=\"8px\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          fullWidth\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await contract.methods\r\n              .buy(new BigNumber(value).times(new BigNumber(10).pow(18)).toString()).send({from: account})\r\n              \r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </Flex>\r\n      <LinkExternal\r\n        href=\"https://pancakeswap.finance/swap?outputCurrency=0xe9e7cea3dedca5984780bafc599bd69add087d56\"\r\n        style={{ margin: 'auto' }}\r\n      >\r\n        {`Get ${currency}`}\r\n      </LinkExternal>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ContributeModal\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useModal, Button, Heading, Card, Text } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { IfoStatus } from 'config/constants/types'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { usePreSaleApprove } from 'hooks/useApprove'\r\nimport { usePreSaleAllowance } from 'hooks/useAllowance'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport CardValue from 'views/Home/components/CardValue'\r\nimport Spacer from 'components/Spacer'\r\nimport LabelButton from './LabelButton'\r\nimport ContributeModal from './ContributeModal'\r\n\r\nconst StyledPreSaleCard = styled(Card)`\r\n  padding: 32px 16px 16px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 437px;\r\n  width: 100%;\r\n  border-radius: 16px;\r\n  margin-top: 16px;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding: 32px 16px 16px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    max-width: 437px;\r\n    width: 100%;\r\n    border-radius: 16px;\r\n  }\r\n`\r\nconst Row = styled.div`\r\n  display: block;\r\n  padding-top: 10px;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: flex;\r\n    padding-top: 24px;\r\n  }\r\n`\r\nconst RowItem = styled.div`\r\n  display: flex;\r\n  padding-top: 16px;\r\n`\r\n\r\nexport interface Props {\r\n  address: string\r\n  currency: string\r\n  currencyAddress: string\r\n  contract: Contract\r\n  status?: IfoStatus\r\n  raisingAmount?: BigNumber\r\n  tokenDecimals: number\r\n}\r\n\r\nconst PresaleContribute: React.FC<Props> = ({\r\n  address,\r\n  currency,\r\n  currencyAddress,\r\n  contract,\r\n  status,\r\n  raisingAmount,\r\n  tokenDecimals,\r\n}) => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [claimTokenBalance, setClaimTokenBalance] = useState(new BigNumber(0))\r\n\r\n  const [claimed, setClaimed] = useState(false)\r\n  const [amount, setAmount] = useState(new BigNumber(0))\r\n  const [isActive, setActive] = useState(true)\r\n  const { account } = useWallet()\r\n  const [total, setTotal] = useState(new BigNumber(0))\r\n  const [unclaimToken, setUnclaimToken] = useState(new BigNumber(0))\r\n  const [ownToken, setOwnToken] = useState(new BigNumber(0))\r\n  const [totalSoldToken, setTotalSoldToken] = useState(new BigNumber(0))\r\n  const [leftToken, setLeftToken] = useState(new BigNumber(0))\r\n  const contractRaisingToken = useERC20(currencyAddress)\r\n  const allowance = usePreSaleAllowance(contractRaisingToken, address, pendingTx)\r\n  const onApprove = usePreSaleApprove(contractRaisingToken, address)\r\n  const [onPresentContributeModal] = useModal(\r\n    <ContributeModal currency={currency} contract={contract} currencyAddress={currencyAddress} />,\r\n  )\r\n\r\n  const TranslateString = useI18n()\r\n\r\n  useEffect(() => {\r\n    const fetchV = async () => {\r\n      const _claimed = await contract.methods.claimActive().call()\r\n      const _active = await contract.methods.saleActive().call()\r\n      const _total = await contract.methods.getPaladinsTokensLeft().call()\r\n      const _totalSoldToken = await contract.methods.getTotalTokensSold().call()\r\n      const _leftToken = new BigNumber(_total).minus(new BigNumber(_totalSoldToken))\r\n      setClaimed(_claimed)\r\n      setActive(_active)\r\n      setLeftToken(_leftToken)\r\n      setTotalSoldToken(_totalSoldToken)\r\n      setTotal(_total)\r\n    }\r\n\r\n    const fetch = async () => {\r\n      const balance = new BigNumber(await contract.methods.getTokensUnclaimed(account).call())\r\n\r\n      const _claimed = await contract.methods.claimActive().call()\r\n      const _amount = await contract.methods.getTokensOwned(account).call()\r\n\r\n      const _active = await contract.methods.saleActive().call()\r\n      const _total = await contract.methods.getPaladinsTokensLeft().call()\r\n\r\n      const _unclaimToken = await contract.methods.getTokensUnclaimed(account).call()\r\n      const _ownToken = await contract.methods.getTokensOwned(account).call()\r\n      const _totalSoldToken = await contract.methods.getTotalTokensSold().call()\r\n      const _leftToken = new BigNumber(_total).minus(new BigNumber(_totalSoldToken))\r\n\r\n      console.log('debug->_total', _leftToken, _ownToken, _totalSoldToken, _total)\r\n\r\n      setClaimed(_claimed)\r\n      setClaimTokenBalance(balance)\r\n      setAmount(_amount)\r\n      setActive(_active)\r\n      setLeftToken(_leftToken)\r\n      setUnclaimToken(_unclaimToken)\r\n      setOwnToken(_ownToken)\r\n      setTotalSoldToken(_totalSoldToken)\r\n      setTotal(_total)\r\n    }\r\n\r\n    if (account) {\r\n      fetch()\r\n    }\r\n    fetchV()\r\n  }, [account, contract.methods, pendingTx])\r\n  // console.log('debug-allow', allowance)\r\n\r\n  // if (allowance === null) {\r\n  //   return null\r\n  // }\r\n\r\n  // const { onClaim } = useClaim()\r\n  const claim = async () => {\r\n    setPendingTx(true)\r\n    await contract.methods.claimTokens().send({ from: account })\r\n    setPendingTx(false)\r\n  }\r\n\r\n  const isFinished = false\r\n\r\n  return (\r\n    <>\r\n      {!isActive && (\r\n        <Heading size=\"lg\" style={{ textAlign: 'center' }}>\r\n          PreSale is not active\r\n        </Heading>\r\n      )}\r\n      <Row>\r\n        <StyledPreSaleCard>\r\n          <Heading size=\"lg\" mb=\"24px\" style={{ textAlign: 'center' }}>\r\n            Buy{' '}\r\n          </Heading>\r\n          {account && allowance <= 0 && (\r\n            <Button\r\n              fullWidth\r\n              disabled={pendingTx || isFinished}\r\n              onClick={async () => {\r\n                try {\r\n                  setPendingTx(true)\r\n                  await onApprove()\r\n                  setPendingTx(false)\r\n                } catch (e) {\r\n                  setPendingTx(false)\r\n                  console.error(e)\r\n                }\r\n              }}\r\n            >\r\n              Approve\r\n            </Button>\r\n          )}\r\n          {!account && <UnlockButton fullWidth />}\r\n          {account && allowance > 0 && (\r\n            <LabelButton\r\n              disabled={pendingTx || !(isActive || isFinished)}\r\n              buttonLabel=\"Contribute\"\r\n              label={isFinished ? 'Your tokens to claim' : `Your contribution (DP)`}\r\n              value={\r\n                // eslint-disable-next-line no-nested-ternary\r\n                isFinished\r\n                  ? claimed\r\n                    ? 'Claimed'\r\n                    : getBalanceNumber(claimTokenBalance, tokenDecimals).toFixed(4)\r\n                  : getBalanceNumber(new BigNumber(amount).times(1)).toFixed(4)\r\n              }\r\n              onClick={onPresentContributeModal}\r\n            />\r\n          )}\r\n        </StyledPreSaleCard>\r\n        <Spacer size=\"sm\" />\r\n        <StyledPreSaleCard>\r\n          <Heading size=\"lg\" mb=\"24px\" style={{ textAlign: 'center' }}>\r\n            Claim{' '}\r\n          </Heading>\r\n\r\n          {!account && <UnlockButton fullWidth />}\r\n          {account && (\r\n            <LabelButton\r\n              disabled={pendingTx || unclaimToken <= new BigNumber(0) || !(isActive || isFinished)}\r\n              buttonLabel=\"Claim\"\r\n              label=\"Your tokens to claim (PD)\"\r\n              value={\r\n                // eslint-disable-next-line no-nested-ternary\r\n                isFinished\r\n                  ? claimed\r\n                    ? 'Claimed'\r\n                    : getBalanceNumber(unclaimToken, tokenDecimals).toFixed(4)\r\n                  : getBalanceNumber(new BigNumber(unclaimToken)).toFixed(4)\r\n              }\r\n              onClick={claim}\r\n            />\r\n          )}\r\n        </StyledPreSaleCard>\r\n      </Row>\r\n      <Row>\r\n        <StyledPreSaleCard>\r\n          <Heading size=\"lg\" mb=\"24px\" style={{ textAlign: 'center' }}>\r\n            Info{' '}\r\n          </Heading>\r\n          <hr />\r\n          <RowItem>\r\n            <Text mr=\"16px\">Purchased PD:</Text>\r\n            <CardValue value={getBalanceNumber(ownToken, 9)} decimals={0} fontSize=\"16px\" />\r\n          </RowItem>\r\n          <RowItem>\r\n            <Text mr=\"16px\">Unclaimed PD:</Text>\r\n            <CardValue value={getBalanceNumber(unclaimToken, 9)} decimals={0} fontSize=\"16px\" />\r\n          </RowItem>\r\n          <hr />\r\n          <RowItem>\r\n            <Text mr=\"16px\">Total PD:</Text>\r\n            <CardValue value={getBalanceNumber(total, 9)} decimals={0} fontSize=\"16px\" />\r\n          </RowItem>\r\n          <RowItem>\r\n            <Text mr=\"16px\">Total PD Sold:</Text>\r\n            <CardValue value={getBalanceNumber(totalSoldToken, 9)} decimals={0} fontSize=\"16px\" />\r\n          </RowItem>\r\n          <hr />\r\n          <RowItem>\r\n            <Text mr=\"16px\" color=\"warning\">\r\n              PD Left:\r\n            </Text>\r\n            <CardValue value={getBalanceNumber(leftToken, 9)} decimals={0} fontSize=\"18px\" />\r\n          </RowItem>\r\n        </StyledPreSaleCard>\r\n        <Spacer size=\"sm\" />\r\n        <StyledPreSaleCard>\r\n          <Heading size=\"lg\" mb=\"24px\" style={{ textAlign: 'center' }}>\r\n            PreSale{' '}\r\n          </Heading>\r\n          {/* <RowItem>\r\n          <Text fontSize='18px' mr='16px'>- Phase 1 & 2 both prices are same</Text>\r\n        </RowItem> */}\r\n          <RowItem>\r\n            <Text fontSize=\"18px\" mr=\"16px\">\r\n              - PD Presale Price:{' '}\r\n            </Text>\r\n            <CardValue fontSize=\"18px\" value={16} decimals={2} prefix=\"$\" />\r\n          </RowItem>\r\n          <RowItem>\r\n            <Text fontSize=\"18px\" mr=\"16px\">\r\n              - PD Launch Price:{' '}\r\n            </Text>\r\n            <CardValue fontSize=\"18px\" value={16} decimals={2} prefix=\"$\" />\r\n          </RowItem>\r\n\r\n          <RowItem>\r\n            <Text fontSize=\"18px\" mr=\"16px\">\r\n              - Minimum Contribution - 16 BUSD\r\n            </Text>\r\n          </RowItem>\r\n          {/* <RowItem>\r\n            <Text fontSize=\"18px\" mr=\"16px\">\r\n              - Maximum Contribution - 1000 BUSD\r\n            </Text>\r\n          </RowItem> */}\r\n          <RowItem>\r\n            <Text fontSize=\"18px\" mr=\"16px\">\r\n              - Need help?\r\n            </Text>\r\n          </RowItem>\r\n        </StyledPreSaleCard>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PresaleContribute\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  background-color: ${({ theme }) => theme.colors.textSubtle};\r\n  height: 1px;\r\n  margin: 0 auto 32px;\r\n  width: 100%;\r\n`\r\n","import React from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport styled from 'styled-components'\r\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport Page from 'components/layout/Page'\r\nimport { usePreSaleContract } from 'hooks/useContract'\r\nimport Hero from './components/Hero'\r\nimport PresaleContribute from './components/PresaleContribute'\r\nimport Divider from './components/Divider'\r\n\r\n\r\nconst Presale = () => {\r\n  const { account } = useWallet()\r\n  // presale contract address\r\n  // const presaleContract = \"0x74908A72D1B615Cd983D8915E364032c849125a6\"\r\n  const presaleContract = \"0x11Ac98f62A5CdBdD36Ed339E9bB9a2dB778ea33C\"\r\n  // token address\r\n  // const currencyAddress = \"0xe9e7cea3dedca5984780bafc599bd69add087d56\"\r\n  const currencyAddress = \"0x0c364692f76930dab46383eb13D6cDb53f63D663\"\r\n  const contract = usePreSaleContract(presaleContract)\r\n  return(\r\n    <>\r\n      <Page>\r\n      <Hero />\r\n      <Divider />\r\n      <PresaleContribute\r\n        address = {presaleContract}\r\n        currency = \"BUSD\"\r\n        currencyAddress = {currencyAddress}\r\n        tokenDecimals = {18}\r\n        contract = {contract}\r\n      />\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Presale\r\n"],"sourceRoot":""}